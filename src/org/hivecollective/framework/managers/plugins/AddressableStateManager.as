package org.hivecollective.framework.managers.plugins{	import com.asual.swfaddress.SWFAddress;	import com.asual.swfaddress.SWFAddressEvent;	import com.gregsczebel.states.core.WordPressSimplePage;		import flash.utils.Dictionary;		import org.hivecollective.framework.HiveFramework;	import org.hivecollective.framework.managers.Manager;	import org.hivecollective.framework.states.IAddressable;	import org.hivecollective.framework.states.IDynamicAddressable;	import org.hivecollective.framework.states.IState;	import org.hivecollective.framework.states.StateController;
	public class AddressableStateManager extends Manager	{		public function AddressableStateManager(hive:HiveFramework)		{			super(hive);			init(hive);		}				protected function init(hive:HiveFramework):AddressableStateManager		{            if(HiveFramework.DEBUG_MODE){trace( "SWFAddressManager :: init" )}                        _addressableStates          = new Dictionary(false);            _addressableStatesByAddress = new Dictionary(false);                        _dynamicAddressableStates   = new Dictionary(false);                                    _defaultPageTitle = SWFAddress.getTitle();                        hive.registerManager(this);			return this;		}        		public var address404State:IAddressable;		        protected var _defaultPageTitle:String;				public function eanble():void		{            SWFAddress.addEventListener( SWFAddressEvent.CHANGE, onAddressChange );  		}				public function disable():void		{			SWFAddress.removeEventListener( SWFAddressEvent.CHANGE, onAddressChange );		}				protected function onAddressChange(e:SWFAddressEvent):void		{			var value:String = e.value;                        if( value.lastIndexOf('/') != value.length-1 )            value += "/";                        var state:IState = getStateByAddress(value) as IState;                        if( state ) {                                hive.stateManager.switchState(state,e);                SWFAddress.setTitle( getTitleFromValue(value) );                            }            else if( address404State ){                trace("AS-Hive Warning: IAddressable or IDynamicAddressable state not found for address ["+value+"]");                SWFAddress.setValue(address404State.address);            }            else {                                if( address404State )                    SWFAddress.setValue(address404State.address);                else SWFAddress.setValue('/');                                throw Error("IAddressable or IDynamicAddressable state not found for address ["+value+"]");            } 		}				public function getTitleFromValue(val:String):String		{		    val = val.lastIndexOf('/') == val.length-1 ?		    val.substr(0,val.length-1):val;		    			var title:String = val.replace(			/[\/]/ig," - "			).replace(			/(([a-z]{1})([A-Z]+[a-zA-Z]{1}))+/g,"$2 $3"			);			return _defaultPageTitle + title; 		}		        protected function getStateByAddress(val:String):Object		{			var s:Object = _addressableStatesByAddress[val];            			if( !s )			{				for( var ds:Object in _dynamicAddressableStates ){					if( RegExp(ds).test(val) )                    return _dynamicAddressableStates[RegExp(ds)] as IDynamicAddressable;                }			}			return s;		}		        protected var _addressableStates:Dictionary;        protected var _addressableStatesByAddress:Dictionary;        protected var _dynamicAddressableStates:Dictionary;		        public function register(...states):void        {            for each( var state:Object in states )            {            	if( state is IAddressable ){                    _addressableStatesByAddress[IAddressable(state).address] = state;                }                else if( state is IDynamicAddressable )                {                	_dynamicAddressableStates[IDynamicAddressable(state).address] = state;                }                _addressableStates[state] = state;            }        }        	}}